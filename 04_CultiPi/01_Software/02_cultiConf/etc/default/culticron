exec 2>&1
exec > >(logger -t "culticron.minutly")


CULTIPI_ACTIV="yes"
CULTITIME_ACTIV="yes"
CULTIRAZ_ACTIV="yes"
CULTICAM_ACTIV="yes"


if [ "$CULTIPI_ACTIV" == "yes" ]; then
    /etc/init.d/cultipi status >/dev/null
    if [ $? -ne 0 ]; then
        echo "--> Restarting cultipi service..."
        /etc/init.d/cultipi force-reload >/dev/null 2>&1
        echo "...ok"
    fi
fi


if [ "$CULTITIME_ACTIV" == "yes" ]; then
    /etc/init.d/cultitime status >/dev/null
    if [ $? -ne 0 ]; then
        echo "--> Restarting cultitime service..."
        /etc/init.d/cultitime force-reload >/dev/null 2>&1
        echo "...ok"
    fi
fi


if [ "$CULTIRAZ_ACTIV" == "yes" ]; then
    /etc/init.d/cultiraz status >/dev/null
    if [ $? -ne 0 ]; then
        echo "--> Restarting cultiraz service..."
        /etc/init.d/cultiraz force-reload >/dev/null 2>&1
        echo "...ok"
    fi
fi

if [ "$CULTICAM_ACTIV" == "yes" ]; then
    /etc/init.d/culticam status >/dev/null
    if [ $? -ne 0 ]; then
        echo "--> Restarting culticam service..."
        /etc/init.d/culticam force-reload >/dev/null 2>&1
        echo "...ok"
    fi
fi


if [ -f /etc/culticonf/reverse_ssh.conf ]; then
        . /etc/culticonf/reverse_ssh.conf
fi


if [ "$CULTISSH_ACTIV" == "yes" ]; then
    if [ "`ps ax|/bin/grep ssh|/bin/grep $REVERSE_PORT_SSH|/bin/grep $REVERSE_IP`" == "" ] && [ "$REVERSE_PORT_SSH" != "" ]; then
        pid="`ps ax|/bin/grep ssh|/bin/grep ':666'|/bin/grep -v 'grep'|awk -F ' ' '{print $1}'`"
        if [ "$pid" != "" ]; then
            echo "--> Killing old reverse SSH..."
            kill -9 $pid
            echo "...ok"
        fi
 
        echo "--> Starting reverse SSH..."
        export AUTOSSH_POLL=30; /usr/bin/autossh -f -M 0 -NR $REVERSE_PORT_SSH:localhost:666 cultipi@$REVERSE_IP
        echo "...ok"
    fi

    if [ "`ps ax|/bin/grep ssh|/bin/grep $REVERSE_PORT_HTTP|/bin/grep $REVERSE_IP`" == "" ] && [ "$REVERSE_PORT_HTTP" != "" ]; then
        pid="`ps ax|/bin/grep ssh|/bin/grep ':80'|/bin/grep -v 'grep'|awk -F ' ' '{print $1}'`"
        if [ "$pid" != "" ]; then
            echo "--> Killing old reverse HTTP..."
            kill -9 $pid
            echo "...ok"
        fi


        echo "--> Starting reverse HTTP..."
        export AUTOSSH_POLL=30; /usr/bin/autossh -f -M 0 -NR $REVERSE_PORT_HTTP:localhost:80 cultipi@$REVERSE_IP -g
        echo "...ok"
    fi

    if [ "`ps ax|/bin/grep ssh|/bin/grep $REVERSE_PORT_HTTPS|/bin/grep $REVERSE_IP`" == "" ] && [ "$REVERSE_PORT_HTTPS" != "" ]; then   
        pid="`ps ax|/bin/grep ssh|/bin/grep '443'|/bin/grep -v 'grep'|awk -F ' ' '{print $1}'`"
        if [ "$pid" != "" ]; then
            echo "--> Killing old reverse HTTPS..."
            kill -9 $pid
            echo "...ok"
        fi

        echo "--> Starting reverse HTTPS..."
        export AUTOSSH_POLL=30; /usr/bin/autossh -f -M 0 -NR $REVERSE_PORT_HTTPS:localhost:443 cultipi@$REVERSE_IP -g
        echo "...ok"
    fi
	
	if [ "`ps ax|/bin/grep ssh|/bin/grep $REVERSE_PORT_WEBCAM|/bin/grep $REVERSE_IP`" == "" ] && [ "$REVERSE_PORT_WEBCAM" != "" ]; then
        pid="`ps ax|/bin/grep ssh|/bin/grep ':8081'|/bin/grep -v 'grep'|awk -F ' ' '{print $1}'`"
        if [ "$pid" != "" ]; then
            echo "--> Killing old reverse WEBCAM..."
            kill -9 $pid
            echo "...ok"
        fi


        echo "--> Starting reverse WEBCAM..."
        export AUTOSSH_POLL=30; /usr/bin/autossh -f -M 0 -NR $REVERSE_PORT_WEBCAM:localhost:8081 cultipi@$REVERSE_IP -g
        echo "...ok"
    fi
else
    pid="`ps ax|/bin/grep autossh|/bin/grep -v 'grep'|awk -F ' ' '{print $1}'`"
    if [ "$pid" != "" ]; then
        echo "--> Killing auto SSH..."
        kill -9 $pid
        echo "...ok"
    fi

    pid="`ps ax|/bin/grep 'ssh -NR'|/bin/grep -v 'grep'|awk -F ' ' '{print $1}'`"
    if [ "$pid" != "" ]; then
        echo "--> Killing remaining SSH..."
        kill -9 $pid
        echo "...ok"
    fi
fi

# Check aliveness of wlan connection:
if [ "`/sbin/ifconfig wlan0 2>/dev/null`" != "" ]; then
    ip="`/sbin/ifconfig wlan0 | grep \"inet adr\" | awk -F: '{print $2}' | awk '{print $1}'`"
    # If no ip address is defined but wlan exists, we have to restart wlan configuration:
    if [ "$ip" == "" ]; then
        echo "--> Restarting wlan configuration, wlan not configured..."
        /sbin/ifdown wlan0
        sleep 2
        /sbin/ifup --force wlan0
        echo "...ok"
    else
        # If ip address is defined, we have to check if we can access the gateway in Managed Mode only:
        mode="`/sbin/iwconfig wlan0|/bin/grep -i \"Mode:managed\"`"
        if [ "$mode" != "" ]; then
            gw="`/sbin/ip route show | grep wlan0 | /bin/grep default | /usr/bin/awk -F\" \" '{print$3}'`"
            if [ "$gw" != "" ]; then
                # If we can't access the gateway, we have lost the connection, we have to restart the connection:
                /bin/ping -c 1 $gw >/dev/null 2>&1
                if [ $? -ne 0 ]; then
                    echo "--> Restarting wlan configuration, gateway unreachable..."
                    /sbin/ifdown wlan0
                    sleep 2
                    /sbin/ifup --force wlan0
                    echo "...ok"
                fi
            fi
        fi
    fi
fi

